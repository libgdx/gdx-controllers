buildscript {
    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "org.docstr:gwt-gradle-plugin:1.1.29"
        classpath "com.android.tools.build:gradle:7.2.2"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    ext {

        appName = 'gdx-controllers'
        gdxVersion = '1.9.11'
        roboVMVersion = '2.3.19'
        jamepadVersion = '2.26.5.0'

        isReleaseBuild = {
            return project.hasProperty("RELEASE")
        }

        getReleaseRepositoryUrl = {
            return project.hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
                    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        }

        getSnapshotRepositoryUrl = {
            return project.hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
                    : "https://oss.sonatype.org/content/repositories/snapshots/"
        }

        getRepositoryUsername = {
            return project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : "$System.env.NEXUS_USERNAME"
        }

        getRepositoryPassword = {
            return project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : "$System.env.NEXUS_PASSWORD"
        }
    }

    repositories {
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    version project.getProperty('version') + (isReleaseBuild() ? "" : "-SNAPSHOT")

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        systemProperty 'file.encoding', 'UTF-8'
    }
}

configure(subprojects.findAll {!it.path.contains(":test:") && it.name != 'gdx-controllers-android'}) {
    apply plugin: 'java-library'

    java {
        withSourcesJar()
        withJavadocJar()
    }
}

apply from: rootProject.file('publish.gradle')

if(rootProject.file('override.gradle').exists())
    apply from: rootProject.file('override.gradle')


