buildscript {
    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "org.wisepersist:gwt-gradle-plugin:1.0.13"
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.12'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    ext {
        minSdk = 16
        targetSdk = 29
        buildTools = '29.0.3'

        appName = 'gdx-controllers'
        gdxVersion = '1.9.11'
        roboVMVersion = '2.3.16'
        jamepadVersion = '2.0.20.0'

        isReleaseBuild = {
            return project.hasProperty("RELEASE")
        }

        isLocalBuild = {
            return project.hasProperty("LOCAL")
        }

        getLocalRepositoryUrl = {
            return project.hasProperty('LOCAL_REPOSITORY_URL') ? LOCAL_REPOSITORY_URL
                    : 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
        }

        getReleaseRepositoryUrl = {
            return project.hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
                    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        }

        getSnapshotRepositoryUrl = {
            return project.hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
                    : "https://oss.sonatype.org/content/repositories/snapshots/"
        }

        getRepositoryUsername = {
            return project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : "$System.env.NEXUS_USERNAME"
        }

        getRepositoryPassword = {
            return project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : "$System.env.NEXUS_PASSWORD"
        }
    }

    repositories {
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    version project.getProperty('version') + (isReleaseBuild() ? "" : "-SNAPSHOT")

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        systemProperty 'file.encoding', 'UTF-8'
    }

    tasks.withType(Sign) {
        onlyIf { isReleaseBuild() }
    }
}

